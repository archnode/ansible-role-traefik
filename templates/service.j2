#jinja2: lstrip_blocks: True
[Unit]
Description=Traefik

Wants=docker.service
After=docker.service

[Service]
Restart=always
RestartSec=10s
EnvironmentFile=/etc/environment

ExecReload=/bin/sh -c '/usr/bin/docker ps | /bin/grep %p 1> /dev/null && /usr/bin/docker exec %p touch /etc/traefik/static.yml || true'
ExecStop=/bin/sh -c '/usr/bin/docker ps | /bin/grep %p 1> /dev/null && /usr/bin/docker stop %p || true'
ExecStartPre=/bin/sh -c '/usr/bin/docker ps | /bin/grep %p 1> /dev/null && /usr/bin/docker kill %p || true'
ExecStartPre=/bin/sh -c '/usr/bin/docker ps -a | /bin/grep %p 1> /dev/null && /usr/bin/docker rm %p || true'
ExecStartPre=/usr/bin/docker pull {{ traefik_image }}
ExecStart=/usr/bin/docker run --rm \
  --name %p \
  --hostname %p \
  --label traefik.enable=true \
{% if traefik_docker_network_name is defined and traefik_docker_network_name %}
  --label traefik.docker.network={{ traefik_docker_network_name }} \
{% endif %}
  --label traefik.http.services.metrics.loadbalancer.server.port=8082 \
  --label traefik.http.services.metrics.loadbalancer.server.scheme=http \
  --label traefik.http.services.metrics.loadbalancer.passhostheader=true \
  --label traefik.http.routers.metrics.rule="Host(`{{ traefik_dashboard_host_rule }}`) && PathPrefix(`/metrics`)" \
  --label traefik.http.routers.metrics.service=metrics@docker \
  --label traefik.http.routers.metrics.entrypoints={{ traefik_dashboard_https_entrypoint }} \
  --label traefik.http.routers.metrics.tls=true \
{% if traefik_dashboard_cert_resolver | default(False) %}
  --label traefik.http.routers.metrics.tls.certresolver={{ traefik_dashboard_cert_resolver }} \
{% endif %}
  --label traefik.http.routers.metrics.middlewares={{ traefik_dashboard_middlewares | join(",") }} \
  --label traefik.http.routers.metrics-insecure.rule="Host(`{{ traefik_dashboard_host_rule }}`) && PathPrefix(`/metrics`)" \
  --label traefik.http.routers.metrics-insecure.service=metrics@docker \
  --label traefik.http.routers.metrics-insecure.entrypoints={{ traefik_dashboard_http_entrypoint }} \
  --label traefik.http.routers.metrics-insecure.middlewares={{ traefik_dashboard_middlewares | join(",") }} \
  --label traefik.http.routers.traefik.rule="Host(`{{ traefik_dashboard_host_rule }}`)" \
  --label traefik.http.routers.traefik.service=api@internal \
  --label traefik.http.routers.traefik.entrypoints={{ traefik_dashboard_https_entrypoint }} \
  --label traefik.http.routers.traefik.tls=true \
{% if traefik_dashboard_cert_resolver | default(False) %}
  --label traefik.http.routers.traefik.tls.certresolver={{ traefik_dashboard_cert_resolver }} \
{% endif %}
  --label traefik.http.routers.traefik.middlewares={{ traefik_dashboard_middlewares | join(",") }} \
  --label traefik.http.routers.traefik-insecure.rule="Host(`{{ traefik_dashboard_host_rule }}`)" \
  --label traefik.http.routers.traefik-insecure.service=api@internal \
  --label traefik.http.routers.traefik-insecure.entrypoints={{ traefik_dashboard_http_entrypoint }} \
  --label traefik.http.routers.traefik-insecure.middlewares={{ traefik_dashboard_middlewares | join(",") }} \
  --env-file /etc/default/traefik \
{% if traefik_docker_network_name is defined and traefik_docker_network_name %}
  --network {{ traefik_docker_network_name }} \
{% endif %}
  --volume /etc/ssl:/etc/ssl:ro \
  --volume /etc/traefik:/etc/traefik \
  --volume /var/run/docker.sock:/var/run/docker.sock \
{% for port in traefik_standard_ports + traefik_additional_ports %}
  --publish {{ port }} \
{% endfor %}
  {{ traefik_image }}

[Install]
WantedBy=multi-user.target
